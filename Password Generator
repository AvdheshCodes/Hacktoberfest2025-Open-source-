import java.util.*;  // Import the java.util package to use Random and other utility classes

/**
 * A simple Java program to generate a random password of specified length.
 * The password includes a mix of uppercase letters, lowercase letters, digits, and symbols.
 * Note: For production use, consider using SecureRandom for better security.
 */
public class PasswordGenerator  // Renamed from NewClass for better descriptiveness
{
    /**
     * Entry point of the program.
     * Generates and prints a password of fixed length 10.
     * 
     * @param args Command-line arguments (not used in this example)
     */
    public static void main(String[] args)
    {
        int length = 10;  // Define the desired length of the password (hardcoded to 10)
        
        // Generate the password and print it properly
        char[] generatedPassword = generateRandomPassword(length);  // Call the method to generate password
        System.out.println();  // Add a newline for better formatting
    }
    
    /**
     * Generates a random password of the given length.
     * 
     * @param len The desired length of the password
     * @return A char array containing the generated password characters
     */
    static char[] generateRandomPassword(int len)  // Renamed from geek_Password for better descriptiveness
    {
        // Print messages indicating the start of password generation
        System.out.println("Generating password using random() : ");
        System.out.print("Your new password is : ");
        
        // Define character sets for different components of the password
        String Capital_chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";  // Uppercase letters A-Z
        String Small_chars = "abcdefghijklmnopqrstuvwxyz";    // Lowercase letters a-z
        String numbers = "0123456789";                       // Digits 0-9
        String symbols = "!@#$%^&*_=+-/.?<>)";               // Special symbols (fixed from original HTML entities)
        
        // Combine all character sets into one string for random selection
        String values = Capital_chars + Small_chars + numbers + symbols;
        
        // Create a Random object for generating random indices
        // Note: For security, use java.security.SecureRandom in production
        Random rndm_method = new Random();
        
        // Initialize a char array to hold the password characters
        char[] password = new char[len];
        
        // Loop to fill the password array with random characters from the combined set
        for (int i = 0; i < len; i++)
        {
            // Select a random index from the values string and assign the character to the array
            password[i] = values.charAt(rndm_method.nextInt(values.length()));
        }
        
        // Print the generated password characters
        for (char c : password) {
            System.out.print(c);  // Output each character without spaces
        }
        System.out.println();  // End with a newline for clean output
        
        // Return the generated password as a char array
        return password;
    }
}
